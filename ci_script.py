#!/usr/bin/env python3
"""
ci_script.py
- Reads diff.txt
- Verifies OPENAI_API_KEY exists (won't print the key)
- Calls OpenAI Chat Completion API
- Saves response or quota warning into review_comment.txt
"""

import os
import sys
from openai import OpenAI

def main():
    print("Hello from ci_script.py — Dani CI test")

    api_key = os.environ.get("OPENAI_API_KEY")
    if not api_key:
        print("ERROR: OPENAI_API_KEY not found in environment. Exiting with failure.")
        sys.exit(1)
    else:
        print("OPENAI_API_KEY found in environment (will NOT print it).")

    # -----------------------------
    # Read diff.txt generated by GitHub Actions
    # -----------------------------
    diff_file = "diff.txt"
    if not os.path.exists(diff_file):
        print(f"ERROR: {diff_file} not found. Exiting.")
        sys.exit(1)

    with open(diff_file, "r") as f:
        diff = f.read()

    if not diff.strip():
        print("No changes detected in diff.txt. Exiting.")
        sys.exit(0)

    # -----------------------------
    # Call OpenAI API
    # -----------------------------
    client = OpenAI(api_key=api_key)

    try:
        resp = client.chat.completions.create(
            model="gpt-5-mini",
            messages=[
                {
                    "role": "system",
                    "content": "You are a senior software engineer reviewing code changes."
                },
                {
                    "role": "user",
                    "content": f"Please review this git diff and provide concise PR comments:\n\n{diff}"
                }
            ],
            max_tokens=500,
        )
        assistant_text = resp.choices[0].message.content.strip()
        print("OpenAI response:\n", assistant_text)

    except Exception as e:
        msg = str(e)
        if "insufficient_quota" in msg:
            assistant_text = "⚠️ OpenAI quota exceeded — cannot generate review right now."
            print(assistant_text)
        else:
            print("OpenAI API request failed:", e)
            sys.exit(1)

    # -----------------------------
    # Save response to review_comment.txt
    # -----------------------------
    with open("review_comment.txt", "w") as f:
        f.write(assistant_text)

if __name__ == "__main__":
    main()

