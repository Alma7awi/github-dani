name: OpenAI Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history to compare branches

      # Step 2: Generate diff between main and the PR branch
      - name: Generate diff
        run: |
          git fetch origin main
          git diff origin/main...HEAD > diff.txt
          echo "Diff file created with size:"
          wc -l diff.txt

      # Step 3: Read diff and call OpenAI, post PR comment
      - name: Review diff with OpenAI
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const fetch = require('node-fetch');

            // Read the diff file
            const diff = fs.readFileSync('diff.txt', 'utf8');
            if (!diff.trim()) {
              console.log('No changes detected in diff.');
              return;
            }

            // Compose prompt for OpenAI
            const prompt = `You are a senior code reviewer. Review the following diff and provide concise comments, suggestions, or improvements:\n\n${diff}`;

            // Call OpenAI API
            const response = await fetch('https://api.openai.com/v1/chat/completions', {
              method: 'POST',
              headers: {
                'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`,
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                model: 'gpt-5-mini',
                messages: [{ role: 'user', content: prompt }]
              })
            });

            const data = await response.json();
            const reviewComment = data.choices[0].message.content;

            // Post the comment to the PR
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: reviewComment
            });

